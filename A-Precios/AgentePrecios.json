{
  "name": "AgentePrecios",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}\n{{ $json.files[0].mimetype }}",
        "options": {
          "systemMessage": "=Rol\nEres un asistente de automatización conectado a Slack. Tu tarea es procesar solicitudes de validación de precios ejecutando pasos específicos basados en comandos recibidos.\n\nComportamiento\nComando \"start\"\nCuando el usuario escriba \"start\":\n\nVerificar existencia de registro: Usa ExecuteQuery para consultar si existe un registro en neto-cloud.agente_precios.sesiones_analisis donde user_id = {{ $json.user }} y DATE(fecha_inicio) = DATE({{ $now }})\n\nSi NO existe registro:\n\nGenera un UUID único usando la herramienta uuid\n\nObtén el real_name del usuario con ObtenerDatosUsuario\n\nInserta un nuevo registro con ExecuteQuery usando estos valores:\n\nid_sesion: UUID generado\n\nuser_id: {{ $json.user }}\n\nnombre_usuario: real_name obtenido\n\nestado_sesion: \"esperando_tienda\"\n\nimagenes_recibidas: 0\n\nfecha_inicio: {{ $now }}\n\nfecha_actualizacion: {{ $now }}\n\nSi EXISTE registro:\n\nConsulta el último registro con estado_sesion = \"esperando_tienda\" para recuperar el id_sesion\n\nComando \"tienda: [número]\"\nCuando el usuario envíe \"tienda: [número]\" (ej: \"tienda: 100\"):\n\nConsultar registro pendiente: Usa ExecuteQuery para obtener el último registro de neto-cloud.agente_precios.sesiones_analisis donde user_id = {{ $json.user }} y estado_sesion = \"esperando_tienda\"\n\nActualizar registro: Usa ExecuteQuery para actualizar:\n\nid_tienda: número de tienda proporcionado\n\nestado_sesion: \"esperando_imagenes\"\n\nfecha_actualizacion: {{ $now }}\n\nDetección de imágenes\nCuando se reciba un mensaje con archivos adjuntos (detectado por la presencia de files en el JSON o {{ $json.files[0].mimetype }} inicie con image/):\n\nPaso 1: Actualizar sesión\nConsultar sesión activa: Usa ExecuteQuery para obtener el último registro donde user_id = {{ $json.user }} y estado_sesion = esperando_imagenes\n\nActualizar sesión: Usa ExecuteQuery para actualizar:\n\nestado_sesion: \"esperando_fin\"\n\nimagenes_recibidas: {{ $json.files.length }}\n\nfecha_actualizacion: {{ $now }}\n\n\n\n\nInsertar registros de imagenes: Usa `ExecuteQuery` para insertar en `neto-cloud.agente_precios.imagenes_analisis`\n\nid_imagen: uuid unico e irrepetible usa la herramienta `uuid`\n\nid_sesion: id_sesion obtenido del paso anterior\n\nurl_imagen: {{ $json.files[0].url_private }}\n\nestado_procesamiento: \"Pendiente\"\n\nfecha_recepcion: {{ $now }}\n\nCondiciones de detección mejoradas\nEl agente debe detectar imágenes cuando:\n\n{{ $json.files }} existe y no está vacío O\n\n{{ $json.files[0].mimetype }} contiene \"image/\" O\n\nHay presencia de campos como url_private, thumb_80, thumb_360, permalink que indican archivo adjunto\n\nReglas importantes\nVerifica primero si el mensaje contiene archivos antes de procesar como imágenes\n\nPara contar imágenes, verifica que mimetype comience con \"image/\"\n\nUsa el campo url_private para obtener la URL de la imagen\n\nEjecuta las herramientas en el orden secuencial correcto\n\nEjecuta un insert para cada imagen que se insertara en `neto-cloud.agente_precios.imagenes_analisis` y asegurate de ir cambiando {{ $json.files[0].url_private }}, {{ $json.files[1].url_private }}, {{ $json.files[2].url_private }}, etc.\n\nComando \"end\"\nCuando el usuario escriba \"end\":\n\nConsulta el ultimo registro con user_id = {{ $json.files[1].user }}, estado_sesion = esperando_fin y recupera su id_sesion y id_tienda, para ello usa la herramienta `ExecuteQuery`\n\nActualiza el estado_sesion = En_Proceso de la tabla `neto-cloud.agente_precios.sesiones_analisis`, utiliza la herramienta `ExecuteQuery`, con el id_sesion que se recupero antes.\n\nConsulta las url_imagen de la tabla `neto-cloud.agente_precios.imagenes_analisis` cuando el id_sesion sea el mismo que el anterior y el estado_procesamiento = Pendiente utiliza la herramienta `ExecuteQuery`, para ejecutar el query.\n\nEnvia la última url a la herramienta `Imagen` junto con el id_tienda, espera a que el la herramienta `Imagen` termine de procesar la primer imagen, despues espera y envia la siguiente y asi hasta terminar con todas las imagenes una vez que tengas la informacion de todas las imagenes.\n\nEspera el resultado de todas las imagenes analizadas y retornalo por slack en el formato exacto que recibes el resultado.\n\nen vez de retornar este formato:\n**Productos con diferencia de precio:**, retorna este *Productos con diferencia de precio:*\n\nen lugar de este formato:\n- CREMA LALA 900 GR ACIDA retorna este:\n  * CREMA LALA 900 GR ACIDA\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1696,
        48
      ],
      "id": "7f7393f4-2a8f-4c19-afdf-a9abfcd1d3da",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1632,
        256
      ],
      "id": "be42d0ec-6917-48a5-8f65-7e65410308b6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fKavKBDAFMDMeKJR",
          "name": "OpenAi Neto"
        }
      }
    },
    {
      "parameters": {
        "description": "Usa esta herramienta para analizar imágenes, y retorna toda la información completa",
        "workflowId": {
          "__rl": true,
          "value": "OWZjsw82Yp4xEDQ3",
          "mode": "list",
          "cachedResultUrl": "/workflow/OWZjsw82Yp4xEDQ3",
          "cachedResultName": "AnalisisImagen#A-Precios"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ $fromAI('query') }}",
            "userId": "={{ $('Slack Trigger').item.json.user }}",
            "tienda": "={{ $fromAI('tienda') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "tienda",
              "displayName": "tienda",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1936,
        256
      ],
      "id": "9da047d5-2f86-4d52-98ec-56690a48310f",
      "name": "Imagen"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "={{ $('Slack Trigger').item.json.channel }}",
          "mode": "id"
        },
        "text": "={{ $json.output }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        2048,
        48
      ],
      "id": "aeb6f7af-412f-42df-9aa6-19b762b720fe",
      "name": "Send a message",
      "webhookId": "180dbcc2-55e4-4e18-a1de-a5b15c7acb6f",
      "credentials": {
        "slackApi": {
          "id": "VMKl7PQWY7SJPP58",
          "name": "Slack account #A-Precios"
        }
      }
    },
    {
      "parameters": {
        "trigger": [
          "message"
        ],
        "watchWorkspace": true,
        "options": {
          "resolveIds": true,
          "userIds": [
            "U09GZHNV8UQ"
          ]
        }
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        1488,
        48
      ],
      "id": "2f67043e-d99d-4afe-a425-c5860a9eb2a1",
      "name": "Slack Trigger",
      "webhookId": "fe5519c2-a90d-4fe7-982c-6ba8f7e1f372",
      "credentials": {
        "slackApi": {
          "id": "VMKl7PQWY7SJPP58",
          "name": "Slack account #A-Precios"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "projectId": {
          "__rl": true,
          "value": "neto-cloud",
          "mode": "list",
          "cachedResultName": "Neto-Cloud",
          "cachedResultUrl": "https://console.cloud.google.com/bigquery?project=neto-cloud"
        },
        "sqlQuery": "{{ $fromAI('query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleBigQueryTool",
      "typeVersion": 2.1,
      "position": [
        2384,
        256
      ],
      "id": "e2ec121d-6198-4fc2-86ad-788586057f9c",
      "name": "ExecuteQuery",
      "credentials": {
        "googleApi": {
          "id": "BrAyOfCNy2JTszLb",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "description": "Usa esta herramienta cuando necesites un uuid univoco e irrepetible",
        "workflowId": {
          "__rl": true,
          "value": "D5LxxphpWPFdg6dg",
          "mode": "list",
          "cachedResultUrl": "/workflow/D5LxxphpWPFdg6dg",
          "cachedResultName": "uuid#A-Precios"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2048,
        256
      ],
      "id": "7c6c93ff-36fc-4f12-86ae-cb772c032746",
      "name": "uuid"
    },
    {
      "parameters": {
        "description": "Usa esta herramienta para obtener los datos del usuario.",
        "workflowId": {
          "__rl": true,
          "value": "j7iJeUrVWsLQTW9A",
          "mode": "list",
          "cachedResultUrl": "/workflow/j7iJeUrVWsLQTW9A",
          "cachedResultName": "ObtenerDatosUsuario#A-Precios"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userId": "={{ $('Slack Trigger').item.json.user }}"
          },
          "matchingColumns": [
            "userId"
          ],
          "schema": [
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2176,
        256
      ],
      "id": "92d992b2-18be-4bba-85aa-36a7ff2be1ed",
      "name": "ObtenerDatosUsuario"
    }
  ],
  "pinData": {
    "Slack Trigger": [
      {
        "json": {
          "user": "U091B7WDXJ4",
          "type": "message",
          "ts": "1759169825.410649",
          "client_msg_id": "8cad2a59-507f-458d-abdc-d80ce73e24c2",
          "text": "end",
          "team": "T9XJE11PE",
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5RU/2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "end"
                    }
                  ]
                }
              ]
            }
          ],
          "channel": "D09GB38TUKW",
          "event_ts": "1759169825.410649",
          "channel_type": "im",
          "user_resolved": "juan.garciag"
        }
      }
    ]
  },
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Imagen": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Slack Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExecuteQuery": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "uuid": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ObtenerDatosUsuario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a4a43e40-42fe-449a-a35a-b7957d737ad2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "513b8468f38706db87bc69e329565f9d7c7508c065cd8491cb3b8e0d8f69afa3"
  },
  "id": "tFlLJBNuGXBIRh9q",
  "tags": []
}