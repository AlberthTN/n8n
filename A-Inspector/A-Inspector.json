{
  "name": "A-Inspector",
  "nodes": [
    {
      "parameters": {
        "trigger": [
          "message"
        ],
        "watchWorkspace": true,
        "options": {
          "resolveIds": true,
          "userIds": [
            "U09GHGTKSL8"
          ]
        }
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        656,
        -48
      ],
      "id": "3aa9d87d-0371-43b7-84c0-b3db0bc6e0fd",
      "name": "Slack Trigger",
      "webhookId": "7b7a1c34-2fa0-4b6e-b07f-1b0d45739f9c",
      "credentials": {
        "slackApi": {
          "id": "KeRz8uv4jvr2vGMf",
          "name": "Slack#A-Inspector"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}\n{{ $json.files[0].mimetype }}",
        "options": {
          "systemMessage": "=Rol\nEres un asistente de automatización conectado a Slack. Tu tarea es procesar imagenes y extraer productos y precios.\n\nComportamiento\nComando \"start\"\nCuando el usuario escriba \"start\":\n\nVerificar existencia de registro: Usa ExecuteQuery para consultar si existe un registro en neto-cloud.agente_inspector.sesiones_analisis donde user_id = {{ $json.user }} y DATE(fecha_inicio) = DATE({{ $now }}) y que el estado_sesion = 'esperando_competencia'\n\nSi NO existe registro:\n\nGenera un UUID único usando la herramienta uuid\n\nObtén el real_name del usuario con ObtenerDatosUsuario\n\nInserta un nuevo registro con ExecuteQuery usando estos valores:\n\nid_sesion: UUID generado\n\nuser_id: {{ $json.user }}\n\nnombre_usuario: real_name obtenido\n\nestado_sesion: \"esperando_competencia\"\n\nimagenes_recibidas: 0\n\nfecha_inicio: {{ $now }}\n\nfecha_actualizacion: {{ $now }}\n\nSi EXISTE registro:\n\nConsulta el último registro con estado_sesion = \"esperando_tienda\" para recuperar el id_sesion\n\nComando \"empresa: [string]\"\nCuando el usuario envíe \"empresa: [string]\" (ej: \"empresa: 3B\"):\n\nConsultar registro pendiente: Usa ExecuteQuery para obtener el último registro de neto-cloud.agente_inspector.sesiones_analisis donde user_id = {{ $json.user }} y estado_sesion = \"esperando_competencia\"\n\nActualizar registro: Usa ExecuteQuery para actualizar:\n\ncompetencia: nombre de la empresa de competencia\n\nestado_sesion: \"esperando_imagenes\"\n\nfecha_actualizacion: {{ $now }}\n\nDetección de imágenes\nCuando se reciba un mensaje con archivos adjuntos (detectado por la presencia de files en el JSON o {{ $json.files[0].mimetype }} inicie con 'image/'):\n\nPaso 1: Actualizar sesión\nConsultar sesión activa: Usa ExecuteQuery para obtener el último registro donde user_id = {{ $json.user }} y estado_sesion = esperando_imagenes\n\nActualizar sesión: Usa ExecuteQuery para actualizar:\n\nestado_sesion: \"esperando_fin\"\n\nimagenes_recibidas: {{ $json.files.length }}\n\nfecha_actualizacion: {{ $now }}\n\n\n\n\nInsertar registros de imagenes: Usa `ExecuteQuery` para insertar en `neto-cloud.agente_inspector.imagenes_analisis`\n\nid_imagen: uuid unico e irrepetible usa la herramienta `uuid`\n\nid_sesion: id_sesion obtenido del paso anterior\n\nurl_imagen: {{ $json.files[0].url_private }}\n\nestado_procesamiento: \"en_proceso\"\n\nfecha_recepcion: {{ $now }}\n\nCondiciones de detección mejoradas\nEl agente debe detectar imágenes cuando:\n\n{{ $json.files }} existe y no está vacío O\n\n{{ $json.files[0].mimetype }} contiene \"image/\" O\n\nHay presencia de campos como url_private, thumb_80, thumb_360, permalink que indican archivo adjunto\n\nReglas importantes\nVerifica primero si el mensaje contiene archivos antes de procesar como imágenes\n\nPara contar imágenes, verifica que mimetype comience con \"image/\"\n\nUsa el campo url_private para obtener la URL de la imagen\n\nEjecuta las herramientas en el orden secuencial correcto\n\nEjecuta un insert para cada imagen que se insertara en `neto-cloud.agente_inspector.imagenes_analisis` y asegurate de ir cambiando {{ $json.files[0].url_private }}, {{ $json.files[1].url_private }}, {{ $json.files[2].url_private }}, etc.\n\nComando \"end\"\nCuando el usuario escriba \"end\":\n\nConsulta el ultimo registro con user_id = {{ $json.files[1].user }}, estado_sesion = esperando_fin y recupera su id_sesion y competencia, para ello usa la herramienta `ExecuteQuery`\n\nActualiza el estado_sesion = Procesado de la tabla `neto-cloud.agente_precios.sesiones_analisis`, utiliza la herramienta `ExecuteQuery`, con el id_sesion que se recupero antes.\n\nConsulta las url_imagen de la tabla `neto-cloud.agente_inspector.imagenes_analisis` cuando el id_sesion sea el mismo que el anterior y el estado_procesamiento = en_proceso utiliza la herramienta `ExecuteQuery`, para ejecutar el query.\n\nEnvia la primera url a la herramienta `Imagen` junto con el competencia, espera a que el la herramienta `Imagen` termine de procesar la primer imagen, despues espera y envia la siguiente y asi hasta terminar con todas las imagenes una vez que tengas la informacion de todas las imagenes.\n\nEspera el resultado de todas las imagenes analizadas y retornalo por slack en formato de lista, separando los resultados por imagenes.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        880,
        -48
      ],
      "id": "dbe8e2b7-44ee-4dce-baad-76dcd584fdbe",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        784,
        128
      ],
      "id": "b706aa6c-3ad5-44b0-8b05-02cda7f12ebf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fKavKBDAFMDMeKJR",
          "name": "OpenAi Neto"
        }
      }
    },
    {
      "parameters": {
        "description": "Usa esta herramienta para analizar imágenes, y retorna toda la información completa",
        "workflowId": {
          "__rl": true,
          "value": "afvGWEJPx2vX1TrB",
          "mode": "list",
          "cachedResultUrl": "/workflow/afvGWEJPx2vX1TrB",
          "cachedResultName": "Inspector #A-Imagen"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ $fromAI('query') }}",
            "userId": "={{ $json.user }}",
            "empresa": "={{ $fromAI('empresa') }}",
            "id_sesion": "={{ $fromAI('id_sesion') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "empresa",
              "displayName": "empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "id_sesion",
              "displayName": "id_sesion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1104,
        176
      ],
      "id": "f6db1775-77e3-4f7a-97f4-c62a4dddf7e7",
      "name": "Imagen"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "={{ $('Slack Trigger').item.json.channel }}",
          "mode": "id"
        },
        "text": "={{ $json.output }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1232,
        -48
      ],
      "id": "80787b6e-3fd1-45d9-b6d4-495dc767f77c",
      "name": "Send a message",
      "webhookId": "180dbcc2-55e4-4e18-a1de-a5b15c7acb6f",
      "credentials": {
        "slackApi": {
          "id": "KeRz8uv4jvr2vGMf",
          "name": "Slack#A-Inspector"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "projectId": {
          "__rl": true,
          "value": "neto-cloud",
          "mode": "list",
          "cachedResultName": "Neto-Cloud",
          "cachedResultUrl": "https://console.cloud.google.com/bigquery?project=neto-cloud"
        },
        "sqlQuery": "{{ $fromAI('query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleBigQueryTool",
      "typeVersion": 2.1,
      "position": [
        1520,
        160
      ],
      "id": "27bcd495-e05d-497f-a129-6744fd4a64a0",
      "name": "ExecuteQuery",
      "credentials": {
        "googleApi": {
          "id": "BrAyOfCNy2JTszLb",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "description": "Usa esta herramienta cuando necesites un uuid univoco e irrepetible",
        "workflowId": {
          "__rl": true,
          "value": "wb0qDLa6ORtFOchH",
          "mode": "list",
          "cachedResultUrl": "/workflow/wb0qDLa6ORtFOchH",
          "cachedResultName": "uuid#A-Inspector"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1216,
        176
      ],
      "id": "b62c904b-b17e-4814-98f1-a47a8a9fbad1",
      "name": "uuid"
    },
    {
      "parameters": {
        "description": "Usa esta herramienta para obtener los datos del usuario.",
        "workflowId": {
          "__rl": true,
          "value": "x5qvhAv1LGc8y2t5",
          "mode": "list",
          "cachedResultUrl": "/workflow/x5qvhAv1LGc8y2t5",
          "cachedResultName": "ObtenerDatosUsuario#A-Inspector"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userId": "={{ $json.user }}"
          },
          "matchingColumns": [
            "userId"
          ],
          "schema": [
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1344,
        176
      ],
      "id": "deeba7d1-78e9-4b9a-ad0c-f8d7191b9062",
      "name": "ObtenerDatosUsuario"
    }
  ],
  "pinData": {
    "Slack Trigger": [
      {
        "json": {
          "user": "U091B7WDXJ4",
          "type": "message",
          "ts": "1758826093.921399",
          "client_msg_id": "c7eae63e-4751-493a-a1b7-60a083cb7e49",
          "text": "end",
          "team": "T9XJE11PE",
          "blocks": [
            {
              "type": "rich_text",
              "block_id": "5RU/2",
              "elements": [
                {
                  "type": "rich_text_section",
                  "elements": [
                    {
                      "type": "text",
                      "text": "end"
                    }
                  ]
                }
              ]
            }
          ],
          "channel": "D09FQATP1T8",
          "event_ts": "1758826093.921399",
          "channel_type": "im",
          "user_resolved": "juan.garciag"
        }
      }
    ]
  },
  "connections": {
    "Slack Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Imagen": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExecuteQuery": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "uuid": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ObtenerDatosUsuario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "78fffa75-ba03-4600-9cac-8c8adb6f3fd4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "513b8468f38706db87bc69e329565f9d7c7508c065cd8491cb3b8e0d8f69afa3"
  },
  "id": "c6kUD9vhgFNBVBxf",
  "tags": []
}